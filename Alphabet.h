#ifndef ALPHABET_H_
#define ALPHABET_H_
#include <Arduino.h>
#include "AbstractByteConsumer.h"

class Alphabet {
public:
	void toBinary(String aString, AbstractByteConsumer* consumer);
private:
	void consumeBytes(byte bytes[]);
	String alpha = " !?/\\,.:;()[]{}<>~`'\"^_#$%&*+-|=@0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
	byte unknown[6] = { 5, 0xff, 0xAA, 0x92, 0xAA, 0xff };
	byte letters[96][6] = {
			{ 3, 0x00, 0x00, 0x00 }, //space
			{ 1, 0xfa }, //exclamation
			{ 5, 0x40, 0x80, 0x8a, 0x90, 0x60 }, //question
			{ 5, 0x04, 0x08, 0x10, 0x20, 0x40 }, //slash
			{ 5, 0x40, 0x20, 0x10, 0x08, 0x04 }, //backslash
			{ 2, 0x0a, 0x0c }, //comm
			{ 2, 0x06, 0x06 }, //dot
			{ 2, 0x6c, 0x6c }, //colon
			{ 2, 0x6a, 0x6c }, //scolon
			{ 3, 0x38, 0x44, 0x82 }, //lpar
			{ 3, 0x82, 0x44, 0x38 }, //rpar
			{ 3, 0xfe, 0x82, 0x82 }, //lbra
			{ 3, 0x82, 0x82, 0xfe }, //rbra
			{ 3, 0x10, 0x6c, 0x82 }, //lcurly
			{ 3, 0x82, 0x6c, 0x10 }, //rcurly
			{ 4, 0x10, 0x28, 0x44, 0x82 }, //lab
			{ 4, 0x82, 0x44, 0x28, 0x10 }, //rab
			{ 5, 0x40, 0x80, 0xc0, 0x40, 0x80 }, //tilde
			{ 3, 0x80, 0x40, 0x20 }, //backtick
			{ 2, 0xa0, 0xc0 }, //squo
			{ 3, 0xe0, 0x00, 0xe0 }, //dquo
			{ 5, 0x20, 0x40, 0x80, 0x40, 0x20 }, //dakje
			{ 5, 0x02, 0x02, 0x02, 0x02, 0x02 }, //underscore
			{ 5, 0x28, 0xfe, 0x28, 0xfe, 0x28 }, //hash
			{ 5, 0x24, 0x54, 0xfe, 0x54, 0x48 }, //doll
			{ 5, 0xc4, 0xc8, 0x10, 0x26, 0x46 }, //perc
			{ 5, 0x6c, 0x92, 0xaa, 0x44, 0x0a }, //ampe
			{ 5, 0x10, 0x54, 0x38, 0x54, 0x10 }, //star
			{ 5, 0x10, 0x10, 0x7c, 0x10, 0x10 }, //plus
			{ 5, 0x10, 0x10, 0x10, 0x10, 0x10 }, //dash
			{ 1, 0xfe }, //pipe
			{ 5, 0x28, 0x28, 0x28, 0x28, 0x28 }, //equals
			{ 5, 0x4c, 0x92, 0x9e, 0x82, 0x7c }, //at
			{ 5, 0x7c, 0x8a, 0x92, 0xa2, 0x7c }, //zero
			{ 3, 0x42, 0xfe, 0x02 }, //one
			{ 5, 0x42, 0x86, 0x8a, 0x92, 0x62 }, //two
			{ 5, 0x84, 0x82, 0xa2, 0xd2, 0x8c }, //three
			{ 5, 0x18, 0x28, 0x48, 0xfe, 0x08 }, //four
			{ 5, 0xe4, 0xa2, 0xa2, 0xa2, 0x9c }, //five
			{ 5, 0x3c, 0x52, 0x92, 0x92, 0x0c }, //six
			{ 5, 0x80, 0x8e, 0x90, 0xa0, 0xc0 }, //seven
			{ 5, 0x6c, 0x92, 0x92, 0x92, 0x6c }, //eight
			{ 5, 0x60, 0x92, 0x92, 0x94, 0x78 }, //nine
			{ 5, 0x7e, 0x88, 0x88, 0x88, 0x7e }, //A
			{ 5, 0xfe, 0x92, 0x92, 0x92, 0x6c }, //B
			{ 5, 0x7c, 0x82, 0x82, 0x82, 0x44 }, //C
			{ 5, 0xfe, 0x82, 0x82, 0x44, 0x38 }, //D
			{ 5, 0xfe, 0x92, 0x92, 0x92, 0x82 }, //E
			{ 5, 0xfe, 0x90, 0x90, 0x80, 0x80 }, //F
			{ 5, 0x7c, 0x82, 0x82, 0x8a, 0x4c }, //G
			{ 5, 0xfe, 0x10, 0x10, 0x10, 0xfe }, //H
			{ 3, 0x82, 0xfe, 0x82 }, //I
			{ 5, 0x04, 0x02, 0x82, 0xfc, 0x80 }, //J
			{ 5, 0xfe, 0x10, 0x28, 0x44, 0x82 }, //K
			{ 5, 0xfe, 0x02, 0x02, 0x02, 0x02 }, //L
			{ 5, 0xfe, 0x40, 0x20, 0x40, 0xfe }, //M
			{ 5, 0xfe, 0x20, 0x10, 0x08, 0xfe }, //N
			{ 5, 0x7c, 0x82, 0x82, 0x82, 0x7c }, //O
			{ 5, 0xfe, 0x90, 0x90, 0x90, 0x60 }, //P
			{ 5, 0x7c, 0x82, 0x8a, 0x84, 0x7a }, //Q
			{ 5, 0xfe, 0x90, 0x98, 0x94, 0x62 }, //R
			{ 5, 0x62, 0x92, 0x92, 0x92, 0x8c }, //S
			{ 5, 0x80, 0x80, 0xfe, 0x80, 0x80 }, //T
			{ 5, 0xfc, 0x02, 0x02, 0x02, 0xfc }, //U
			{ 5, 0xf8, 0x04, 0x02, 0x04, 0xf8 }, //V
			{ 5, 0xfe, 0x04, 0x18, 0x04, 0xfe }, //W
			{ 5, 0xc6, 0x28, 0x10, 0x28, 0xc6 }, //X
			{ 5, 0xc0, 0x20, 0x1e, 0x20, 0xc0 }, //Y
			{ 5, 0x86, 0x8a, 0x92, 0xa2, 0xc2 }, //Z
			{ 5, 0x04, 0x2a, 0x2a, 0x2a, 0x1e }, //a
			{ 5, 0xfe, 0x12, 0x22, 0x22, 0x1c }, //b
			{ 5, 0x1c, 0x22, 0x22, 0x22, 0x04 }, //c
			{ 5, 0x1c, 0x22, 0x22, 0x12, 0xfe }, //d
			{ 5, 0x1c, 0x2a, 0x2a, 0x2a, 0x18 }, //e
			{ 5, 0x10, 0x7e, 0x90, 0x80, 0x40 }, //f
			{ 5, 0x10, 0x28, 0x2a, 0x2a, 0x3c }, //g
			{ 5, 0xfe, 0x10, 0x20, 0x20, 0x1e }, //h
			{ 3, 0x22, 0xbe, 0x02 }, //i
			{ 4, 0x04, 0x02, 0x22, 0xbc,  }, //j
			{ 4, 0xfe, 0x08, 0x14, 0x22 }, //k
			{ 3, 0x82, 0xfe, 0x02 }, //l
			{ 5, 0x3e, 0x20, 0x18, 0x20, 0x1e }, //m
			{ 5, 0x3e, 0x10, 0x20, 0x20, 0x1e }, //n
			{ 5, 0x1c, 0x22, 0x22, 0x22, 0x1c }, //o
			{ 5, 0x3e, 0x28, 0x28, 0x28, 0x10 }, //p
			{ 5, 0x10, 0x28, 0x28, 0x18, 0x3e }, //q
			{ 5, 0x3e, 0x10, 0x20, 0x20, 0x10 }, //r
			{ 5, 0x12, 0x2a, 0x2a, 0x2a, 0x04 }, //s
			{ 5, 0x20, 0xfc, 0x22, 0x02, 0x04 }, //t
			{ 5, 0x3c, 0x02, 0x02, 0x04, 0x3e }, //u
			{ 5, 0x38, 0x04, 0x02, 0x04, 0x38 }, //v
			{ 5, 0x3c, 0x02, 0x0c, 0x02, 0x3c }, //w
			{ 5, 0x22, 0x14, 0x08, 0x14, 0x22 }, //x
			{ 5, 0x30, 0x0a, 0x0a, 0x0a, 0x3c }, //y
			{ 5, 0x22, 0x26, 0x2a, 0x32, 0x22 }, //z
			};
};

#endif
